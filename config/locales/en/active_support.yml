# Files in the config/locales directory are used for internationalization and
# are automatically loaded by Rails. If you want to use locales other than
# English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more about the API, please read the Rails Internationalization guide
# at https://guides.rubyonrails.org/i18n.html.
#
# Be aware that YAML interprets the following case-insensitive strings as
# booleans: `true`, `false`, `on`, `off`, `yes`, `no`. Therefore, these strings
# must be quoted to be interpreted as strings. For example:
#
#     en:
#       "yes": yup
#       enabled: "ON"

en:
  date:
    abbr_day_names:
    - Sun
    - Mon
    - Tue
    - Wed
    - Thu
    - Fri
    - Sat
    abbr_month_names:
    -
    - Jan
    - Feb
    - Mar
    - Apr
    - May
    - Jun
    - Jul
    - Aug
    - Sep
    - Oct
    - Nov
    - Dec
    day_names:
    - Sunday
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%Y-%m-%d"
      short: "%b %d"
      long: "%B %d, %Y"

    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names:
    -
    - January
    - February
    - March
    - April
    - May
    - June
    - July
    - August
    - September
    - October
    - November
    - December

    # Used in date_select and datetime_select.
    order:
    - year
    - month
    - day

  datetime:
    distance_in_words:
      about_x_hours:
        one: about %{count} hour
        other: about %{count} hours
      about_x_months:
        one: about %{count} month
        other: about %{count} months
      about_x_years:
        one: about %{count} year
        other: about %{count} years
      almost_x_years:
        one: almost %{count} year
        other: almost %{count} years
      half_a_minute: half a minute
      less_than_x_seconds:
        one: less than %{count} second
        other: less than %{count} seconds
      less_than_x_minutes:
        one: less than a minute
        other: less than %{count} minutes
      over_x_years:
        one: over %{count} year
        other: over %{count} years
      x_seconds:
        one: "%{count} second"
        other: "%{count} seconds"
      x_minutes:
        one: "%{count} minute"
        other: "%{count} minutes"
      x_days:
        one: "%{count} day"
        other: "%{count} days"
      x_months:
        one: "%{count} month"
        other: "%{count} months"
      x_years:
        one: "%{count} year"
        other: "%{count} years"
    prompts:
      second: Seconds
      minute: Minute
      hour: Hour
      day: Day
      month: Month
      year: Year

  number:
    # Used in NumberHelper.number_to_currency()
    currency:
      format:
        # Where is the currency sign? %u is the currency unit, %n is the number (default: $5.00)
        format: "%u%n"
        negative_format: "-%u%n"
        # These six are to override number.format and are optional
        precision: 2
        delimiter: ","
        separator: "."
        significant: false
        strip_insignificant_zeros: false
        unit: "$"

    # Used in NumberHelper.number_to_delimited()
    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
    format:
      # Delimits thousands (e.g. 1,000,000 is a million) (always in groups of three)
      delimiter: ","
      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
      precision: 3
      # Determine how rounding is performed (see BigDecimal::mode)
      round_mode: default
      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
      separator: "."
      # If set to true, precision will mean the number of significant digits instead
      # of the number of decimal digits (1234 with precision 2 becomes 1200, 1.23543 becomes 1.2)
      significant: false
      # If set, the zeros after the decimal separator will always be stripped (e.g.: 1.200 will be 1.2)
      strip_insignificant_zeros: false

    # Used in NumberHelper.number_to_human_size() and NumberHelper.number_to_human()
    human:
      # Used in NumberHelper.number_to_human()
      decimal_units:
        format: "%n %u"

        # Decimal units output formatting
        # By default we will only quantify some of the exponents
        # but the commented ones might be defined or overridden
        # by the user.
        units:
          billion: Billion
          million: Million
          quadrillion: Quadrillion
          thousand: Thousand
          trillion: Trillion
          unit: ''
      format:
        delimiter: ''
        precision: 3
        significant: true
        strip_insignificant_zeros: true

      # Used in number_to_human_size()
      storage_units:
        # Storage units output formatting.
        # %u is the storage unit, %n is the number (default: 2 MB)
        format: "%n %u"
        units:
          byte:
            one: Byte
            other: Bytes
          eb: EB
          gb: GB
          kb: KB
          mb: MB
          pb: PB
          tb: TB
          zb: ZB

    # Used in NumberHelper.number_to_percentage()
    percentage:
      format:
        delimiter: ''
        format: "%n%"
    precision:
      format:
        delimiter: ''
  
# Used in array.to_sentence.
  support:
    array:
      last_word_connector: ", and "
      two_words_connector: " and "
      words_connector: ", "
  
  time:
    am: am
    formats:
      default: "%a, %d %b %Y %H:%M:%S %z"
      long: "%B %d, %Y %H:%M"
      short: "%d %b %H:%M"
    pm: pm
